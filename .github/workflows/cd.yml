name: cd

on:
  push:
    tags:
    - '*'

jobs:
  ubuntu:
    name: Compile Linux
    strategy:
      matrix:
        os: [ubuntu-18.04]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Install latest rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        override: true

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Test
      run: make test

    - name: Extract tag version from ref
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Build
      run: make zip
      env:
        PLATFORM: linux
        BUILD_VERSION: ${{ steps.get_version.outputs.VERSION }}

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: factotum_server_${{ steps.get_version.outputs.VERSION }}_linux_x86_64.zip
        path: build/compiled/factotum_server_${{ steps.get_version.outputs.VERSION }}_linux_x86_64.zip

  macos:
    name: Compile macOS
    strategy:
      matrix:
        os: [macos-10.15]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Install latest rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-apple-darwin
        default: true
        override: true

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Test
      run: make test

    - name: Extract tag version from ref
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Build
      run: make zip
      env:
        PLATFORM: darwin
        BUILD_VERSION: ${{ steps.get_version.outputs.VERSION }}

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: factotum_server_${{ steps.get_version.outputs.VERSION }}_darwin_x86_64.zip
        path: build/compiled/factotum_server_${{ steps.get_version.outputs.VERSION }}_darwin_x86_64.zip

  release:
    needs: ["ubuntu", "macos"]

    name: Release
    strategy:
      matrix:
        os: [ubuntu-18.04]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Extract tag version from ref
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - run: mkdir -p ./build/compiled

    - uses: actions/download-artifact@v2
      with:
        name: factotum_server_${{ steps.get_version.outputs.VERSION }}_linux_x86_64.zip
        path: build/compiled

    - uses: actions/download-artifact@v2
      with:
        name: factotum_server_${{ steps.get_version.outputs.VERSION }}_darwin_x86_64.zip
        path: build/compiled

    - name: Upload release binaries
      uses: alexellis/upload-assets@0.2.3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["./build/compiled/*"]'
